x-influxdb-shared-vars: &influxdb-shared-vars
    # InfluxDB will create the specified database and an admin account with the specified credentials.
    # More info: https://github.com/influxdata/influxdata-docker/pull/102 
    INFLUXDB_DB: ${INFLUXDB_DB}
    INFLUXDB_ADMIN_USER: ${INFLUXDB_ADMIN_USER}
    INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}

services:
    influxdb:
        container_name: $INFLUXDB_CONTAINER
        image: influxdb:2.7
        volumes:
            - type: bind
              source: ./influxdb-data
              target: /var/lib/influxdb
              read_only: false

            - type: bind
              source: ./influxdb/docker-entrypoint-initdb.d
              target: /docker-entrypoint-initdb.d
              read_only: true
        env_file:
            - ./.env
        environment:
            INFLUXDB_META_DIR: /var/lib/influxdb/meta

            INFLUXDB_DATA_DIR: /var/lib/influxdb/data
            INFLUXDB_DATA_WAL_DIR: /var/lib/influxdb/data
            INFLUXDB_DATA_MAX_SERIES_PER_DATABASE: 0
            INFLUXDB_DATA_MAX_VALUES_PER_TAG: 0
            INFLUXDB_DATA_SERIES_ID_SET_CACHE_SIZE: 100
            
            INFLUXDB_HTTP_BIND_ADDRES: :${INFLUXDB_PORT}
            INFLUXDB_HTTP_ENABLED: "true"
            INFLUXDB_HTTP_AUTH_ENABLED: "true"

            << : *influxdb-shared-vars
        networks:
            - traefik_public
        restart: unless-stopped
        labels:
            - "traefik.http.routers.influxdb-ssl.entryPoints=influxdb-port"
            - "traefik.http.routers.influxdb-ssl.rule=host(`$METRICS_DOMAIN`)"
            - "traefik.http.routers.influxdb-ssl.tls=true"
            - "traefik.http.routers.influxdb-ssl.tls.certResolver=letsencryptresolver"
            - "traefik.http.routers.influxdb-ssl.service=influxdb-ssl"
            - "traefik.http.services.influxdb-ssl.loadBalancer.server.port=$INFLUXDB_PORT"

    grafana:
        container_name: grafana
        image: grafana/grafana:11.4
        volumes:
            - type: bind
              source: ./grafana-data
              target: /var/lib/grafana
              read_only: false

            - type: bind
              source: ./grafana/provisioning
              target: /etc/grafana/provisioning
              read_only: true
        env_file:
            - ./.env
        environment:
            GF_PATHS_DATA: /var/lib/grafana
            GF_PATHS_PLUGINS: /var/lib/grafana/plugins
            GF_PATHS_PROVISIONING: /etc/grafana/provisioning
            
            GF_SERVER_HTTP_PORT: 3000
            GF_SERVER_METRICS_DOMAIN: ${METRICS_DOMAIN}
            GF_SERVER_ROOT_URL: https://${METRICS_DOMAIN}

            GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
            GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}

            GF_LOG_MODE: console

            # Variables for setting up the InfluxDB data source
            << : *influxdb-shared-vars
        networks:
            - traefik_public
        restart: unless-stopped
        depends_on:
            - $INFLUXDB_CONTAINER
        labels:

            - "traefik.http.routers.grafana-ssl.entryPoints=websecure"
            - "traefik.http.routers.grafana-ssl.rule=host(`$METRICS_DOMAIN`)"
            - "traefik.http.routers.grafana-ssl.tls=true"
            - "traefik.http.routers.grafana-ssl.tls.certResolver=letsencryptresolver"
            - "traefik.http.routers.grafana-ssl.service=grafana-ssl"
            - "traefik.http.services.grafana-ssl.loadBalancer.server.port=3000"

networks:
    traefik_public:
        name: traefik_public
